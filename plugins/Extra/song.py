import asyncio
import os
import re
from pyrogram import Client, filters
from pytube import YouTube
from info import LOG_CHANNEL
from youtube_search import YoutubeSearch

@Client.on_message(filters.command(["song"]))
async def download_song(client, message):

  if len(message.text.split()) < 2:
    await message.reply("·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥õ ú·¥á s·¥è…¥…¢  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥á…¢:- /song lover")
    return

  song_name = " ".join(message.text.split()[1:]) 


  await message.reply("‚è≥")

 
  search_results = YoutubeSearch(song_name, max_results=1).to_dict()
  if not search_results:
    await message.reply("…¥·¥è s·¥è…¥…¢ “ì·¥è·¥ú…¥·¥Ö ·¥°…™·¥õ ú ·¥õ ú·¥Ä·¥õ …¥·¥Ä·¥ç·¥á ·¥°…™·¥õ ú ·¥õ ú·¥Ä·¥õ")

  song_url = search_results[0]["url_suffix"]
  song_title = search_results[0]["title"]
  duration = search_results[0]["duration"]

 
  yt = YouTube(f"https://www.youtube.com{song_url}")
  thumbnail_url = yt.thumbnail_url 

  video = audio_streams.first()
  audio_filename = f"{song_title}.mp3"

  try:
    video.download(filename=audio_filename)

   
    thumbnail_caption = f"**üçÉ {song_title}**\n" + \
              f"üïõ ·¥Ö·¥ú Ä·¥õ…™·¥è…¥: {duration}\n" + \
              f"üçÇ  è·¥è·¥ú ·¥õ·¥ú ô·¥á: <a href='https://www.youtube.com{song_url}'> è·¥è·¥ú ·¥õ·¥ú ô·¥á</a>"


    await message.reply_photo(
      thumbnail_url,
      caption=thumbnail_caption
    )

    song_caption = f"**üéß {song_title}**\n"

   
    await message.reply_audio(
      audio_filename,
      caption=song_caption
    )
    await client.send_message(LOG_CHANNEL, text=f"#s·¥è…¥…¢\n Ä·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö “ì Ä·¥è·¥ç {message.from_user.mention}\n Ä·¥á«´·¥ú·¥ás·¥õ …™s {song_name}")


    os.remove(audio_filename)

  except Exception as e:
    await message.reply(f"·¥á Ä Ä·¥è Ä s·¥è…¥…¢ ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö…™…¥…¢: {e}")
